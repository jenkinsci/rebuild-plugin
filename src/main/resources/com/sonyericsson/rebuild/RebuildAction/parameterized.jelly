<!--
The MIT License

Copyright (c) 2004-2009, Sun Microsystems, Inc., Kohsuke Kawaguchi, Tom Huybrechts

Copyright 2010 Sony Ericsson Mobile Communications.All rights reserved.
Copyright 2012 Sony Mobile Communications AB. All rights reservered.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-->

<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout"
         xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:i="jelly:fmt">
    <l:layout title="${%Rebuild}" norefresh="true" permission="${it.requiredPermission}">
        <l:side-panel>
            <l:tasks>
                <l:task icon="images/24x24/up.gif" href="${rootURL}/" title="${%Back to Dashboard}"/>
            </l:tasks>
        </l:side-panel>
        <l:main-panel>
            <j:invokeStatic var="currentThread" className="java.lang.Thread" method="currentThread" />
            <j:invoke var="buildClass" on="${currentThread.contextClassLoader}" method="loadClass">
                <j:arg value="hudson.model.Run"/>
            </j:invoke>

            <j:invoke var="parmactionClass" on="${currentThread.contextClassLoader}" method="loadClass">
                <j:arg value="hudson.model.ParametersAction" />
            </j:invoke>
            <j:invoke var="parametersDefinitionPropertyClass" on="${currentThread.contextClassLoader}" method="loadClass">
                <j:arg value="hudson.model.ParametersDefinitionProperty" />
            </j:invoke>
            <j:invoke var="passwordParameterValueClass" on="${currentThread.contextClassLoader}" method="loadClass">
                <j:arg value="hudson.model.PasswordParameterValue" />
            </j:invoke>

            <j:set var="instance" value="${it}"/>
            <j:set var="descriptor" value="${it.descriptor}"/>
            <j:set var="rememberPasswordEnabled" value="${it.DESCRIPTOR.rebuildConfiguration.rememberPasswordEnabled}" scope="parent"/>
            <j:set var="build" value="${request.findAncestorObject(buildClass)}" />
            <j:set var="paramAction" value="${build.getAction(parmactionClass)}" />
            <j:set var="parametersProperty" value="${build.parent.getProperty(parametersDefinitionPropertyClass)}" />
            <f:form method="post" action="configSubmit" name="config" tableClass="parameters">
            	<!-- Displaying the form based on current job parameter config with previous build values. -->
                <j:forEach var="parameterDefinition" items="${parametersProperty.parameterDefinitions}">
                    <tbody>
                    	<j:set var="parameterValue" value="${paramAction.getParameter(parameterDefinition.name)}" />
                    	<j:if test="${parameterValue != null}">
	                    	<j:set var="page" value="${it.getRebuildParameterPage(parameterValue)}" />
                    		<j:if test="${page != null}"> 
		                    	<j:scope>
				                    <st:include it="${parameterValue}"
    	        	                    class="${page.clazz}"  page="${page.page}" />
        	        		    </j:scope>
            	        	</j:if>
                	    	<j:if test="${page == null}">
                    			<!-- Let's fallback on the regular valuePage implementation -->
                    			<st:include it="${parameterDefinition.copyWithDefaultValue(parameterValue)}"
	                        		    page="${parameterDefinition.descriptor.valuePage}" />
                    		</j:if>
                        </j:if>
                    	<j:if test="${parameterValue == null}">
                    			<!-- No previous value in case of new property definition introduced in the config, 
                    			     so let's use the default from parameter definition -->
                    			<st:include it="${parameterDefinition}"
	                        		    page="${parameterDefinition.descriptor.valuePage}" />
                    	</j:if>
                    </tbody>
                </j:forEach>
                <j:if test="${empty(parametersProperty.parameterDefinitions)}">
                            <j:forEach var="parameterValue" items="${paramAction.parameters}">
                                <j:scope>
                                    <j:set var="page" value="${it.getRebuildParameterPage(parameterValue)}" />
                                    <st:include it="${parameterValue}" class="${page.clazz}"  page="${page.page}" />
                                </j:scope>
                             </j:forEach>
                </j:if>
                <br/>
                <br/>
                <f:block>
                    <f:submit value="${%Rebuild}"/>
                </f:block>
            </f:form>
        </l:main-panel>
    </l:layout>
</j:jelly>
